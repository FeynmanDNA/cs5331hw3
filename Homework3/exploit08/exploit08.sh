# Bug Category: Reflected XSS

# The logic of the case08.php is: 
# 1. user input the value for "name" at the textfield at line11
# 2. hitting submit will send a GET request with the param "name"
# 3. the php script will do some sanitization to replace "<script>" in the "name" param at line18
# 4. the sanitized "name" param's value will be passed to the html param at line21
# 5. the constructed html param will be echoed to the screen at line24

# Exploit: 
# even though there is some basic sanitization at line18 to replace <script> string,
# this is still vulnerable to reflected XSS
# to bypass the str_ireplace sanitization, call javascript via img onerror
# <img src=0 onerror=alert(document.cookie)>
# Note, chrome/chromium browsers has built-in defense against reflected XSS
# ERR_BLOCKED_BY_XSS_AUDITOR, so need to use Firefox to see this flag

#!/bin/bash
python3 exploit08.py
